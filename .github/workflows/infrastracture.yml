name: Provision Infrastructure

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-central-1
      TF_VAR_s3_bucket: ${{ secrets.TF_VAR_s3_bucket}}
      TF_VAR_account_id: ${{ secrets.TF_VAR_account_id }}
      TF_VAR_region: eu-central-1
      TF_VAR_vpc_cidr_block: ${{ secrets.TF_VAR_vpc_cidr_block }}
      TF_VAR_subnet_cidr_block: ${{ secrets.TF_VAR_subnet_cidr_block }}
      TF_VAR_private_ip: ${{ secrets.TF_VAR_private_ip}}
      TF_VAR_ssh_cidr_block: ${{ secrets.TF_VAR_ssh_cidr_block}}
      TF_VAR_web_access_cidr_blocks: ${{ secrets.TF_VAR_web_access_cidr_blocks}}
    steps:
      - name: Debug Environment Variables
        run: |
          echo "AWS_ACCESS_KEY_ID is set: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY is set: $AWS_SECRET_ACCESS_KEY"
          echo "AWS_REGION is set: $AWS_REGION"
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform init and apply
        run: |
          cd terraform
          terraform init
          terraform apply --auto-approve

      - name: Verify Terraform Outputs
        run: | 
          cd terraform
          terraform output

      - name: Output EC2 Public IP
        run: |
          cd terraform
          EC2_PUBLIC_IP=$(terraform output -raw server_public_ip)
          echo "EC2 Public IP is $EC2_PUBLIC_IP"
          echo "EC2_PUBLIC_IP=$EC2_PUBLIC_IP" >> $GITHUB_ENV
