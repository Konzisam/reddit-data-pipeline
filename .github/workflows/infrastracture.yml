name: Provision Infrastructure

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Set environment variables from secrets
        run: |
          echo "TF_VAR_s3_bucket=${{ secrets.TF_VAR_s3_bucket }}" >> $GITHUB_ENV
          echo "TF_VAR_account_id=${{ secrets.TF_VAR_account_id }}" >> $GITHUB_ENV
          echo "TF_VAR_region=${{ secrets.TF_VAR_region }}" >> $GITHUB_ENV
          echo "TF_VAR_vpc_cidr_block=${{ secrets.TF_VAR_vpc_cidr_block }}" >> $GITHUB_ENV
          echo "TF_VAR_subnet_cidr_block=${{ secrets.TF_VAR_subnet_cidr_block }}" >> $GITHUB_ENV
          echo "TF_VAR_private_ip=${{ secrets.TF_VAR_private_ip }}" >> $GITHUB_ENV
          echo "TF_VAR_ssh_cidr_block=${{ secrets.TF_VAR_ssh_cidr_block }}" >> $GITHUB_ENV
          echo "TF_VAR_web_access_cidr_blocks=${{ secrets.TF_VAR_web_access_cidr_blocks }}" >> $GITHUB_ENV

      - name: Terraform init and apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      - name: Output EC2 Public IP
        run: |
          EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)
          echo "EC2 Public IP is $EC2_PUBLIC_IP"
          echo "EC2_PUBLIC_IP=$EC2_PUBLIC_IP" >> $GITHUB_ENV
